fn is_ip(input: &str) -> bool {
    let dot_count = input.chars().filter(|&c| c == '.').count();

    if dot_count != 3 {
        return false;
    }

    input
        .split('.')
        .map(|octet| octet.parse::<u8>())
        .collect::<Result<Vec<u8>, _>>().is_ok()
}

pub fn get_ip() -> Result<String, &'static str> {
    let mut args = std::env::args();

    if args.len() != 2 {
        println!("NEED IP!");
        std::process::exit(1);
    }

    args.next();

    match args.next() {
        Some(ip) if is_ip(&ip) => return Ok(ip),
        _ => return Err("It's not ip!"),
    };
}